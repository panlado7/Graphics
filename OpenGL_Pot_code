#include <GL/freeglut.h>
#include <cmath>

float angle = 0.0f; // 회전 각도

void render() {
    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
    glLoadIdentity();

    // 카메라 위치 및 방향 설정
    gluLookAt(3.0f, 3.0f, 3.0f,   // 카메라 위치
              0.0f, 0.0f, 0.0f,   // 타겟 위치
              0.0f, 1.0f, 0.0f);  // 카메라의 상단 방향

    // 조명 설정
    GLfloat light_position[] = { 5.0, 5.0, 5.0, 0.0 }; // 조명 위치
    GLfloat light_ambient[] = { 0.2, 0.2, 0.2, 1.0 }; // 주변광
    GLfloat light_diffuse[] = { 1.0, 1.0, 1.0, 1.0 }; // 난반사광
    GLfloat light_specular[] = { 1.0, 1.0, 1.0, 1.0 }; // 정반사광

    glLightfv(GL_LIGHT0, GL_POSITION, light_position);
    glLightfv(GL_LIGHT0, GL_AMBIENT, light_ambient);
    glLightfv(GL_LIGHT0, GL_DIFFUSE, light_diffuse);
    glLightfv(GL_LIGHT0, GL_SPECULAR, light_specular);

    glEnable(GL_LIGHTING);
    glEnable(GL_LIGHT0);

    // 회전 변환 적용
    glRotatef(angle, 0.0f, 1.0f, 0.0f); // y축을 중심으로 회전

    // 주전자 그리기
    glColor3f(1.0f, 0.0f, 0.0f); // 빨간색
    glutSolidTeapot(1.0); // 주전자 그리기

    glutSwapBuffers();
}

void reshape(int width, int height) {
    glViewport(0, 0, width, height);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluPerspective(45.0f, (GLfloat)width / (GLfloat)height, 0.1f, 100.0f);
    glMatrixMode(GL_MODELVIEW);
    glLoadIdentity();
}

void update(int value) {
    angle += 2.0f; // 각도 증가
    if (angle > 360) {
        angle -= 360; // 각도가 360을 넘으면 초기화
    }

    glutPostRedisplay(); // 화면 갱신
    glutTimerFunc(16, update, 0); // 16ms마다 업데이트 호출
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGBA | GLUT_DEPTH);
    glutInitWindowSize(800, 600);
    glutCreateWindow("주전자");

    glEnable(GL_DEPTH_TEST);

    glutDisplayFunc(render);
    glutReshapeFunc(reshape);
    glutTimerFunc(16, update, 0); // 16ms마다 업데이트 호출

    glutMainLoop();
    return 0;
}
